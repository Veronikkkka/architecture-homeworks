# version: '3.5'
# services:
#   # database:
#   #   container_name: postgres1
#   #   image: postgres:latest    
#   #   environment:
#   #     POSTGRES_USER: username
#   #     POSTGRES_PASSWORD: password
#   #     POSTGRES_DB: bd
      
#   #   ports:
#   #     - 5432:5432
#   #   volumes:
#   #     - db_volume:/var/lib/postgresql
#   #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#   # database:
#   #   container_name: sqlite1
#   #   image: tiangolo/uvicorn-gunicorn-fastapi:python3.8 #ubuntu:latest #tiangolo/uwsgi-nginx-flask:python3.8
#   #   volumes:
#   #     - ./events.db:/app/events.db
#     # ports:
#     #   - 5432:5432
 
#     # command: bash -c "apt-get update && apt-get install -y sqlite3 && bash"
#   # database:
#   #   container_name: mysql1
#   #   image: mysql:latest    
#   #   environment:
#   #     MYSQL_ROOT_PASSWORD: "password"
#   #     # MYSQL_DATABASE: bd
#   #     # MYSQL_USER: username
#   #     # MYSQL_PASSWORD: password
      
#   #   ports:
#   #     - 5432:5432
#     # volumes:
#     #   - db_volume:/var/lib/mysql
#     #   - ./init.sql:/docker-entrypoint-initdb.d/init.sql

#   database:
#     image: alpine:latest
#     command: tail -f /dev/null

#   web:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     # ports:
#     #   - "5000:5000"
#     depends_on:
#       - database

# volumes:
#   db_volume:

# networks:
#   mynetwork:
#     driver: bridge
#     external: true

version: '3'

services:
  db:
    image: alpine:latest
    command: tail -f /dev/null
    volumes:
      - db_volume:/path/to/mount

  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - mongodb
    volumes:
      - .:/app
    networks:
      - mynetwork

  mongodb:
    container_name:  mongodb
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - mynetwork
    # volumes:
    #   - ./mongodb:/data/db

volumes:
  db_volume:

networks:
  mynetwork:
    external: true
